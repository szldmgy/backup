%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Microsoft Windows 7.
%%Title: E:\Matlab\Protein structure determination\Alternative direction method\figures\GraphRealization.eps
%%CreationDate: 12/04/2012  22:31:29
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 656 3366 mt  656 3326 L
 656  284 mt  656  323 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 623 3511 mt 
(0) s
1438 3366 mt 1438 3326 L
1438  284 mt 1438  323 L
1355 3511 mt 
(0.2) s
2220 3366 mt 2220 3326 L
2220  284 mt 2220  323 L
2137 3511 mt 
(0.4) s
3002 3366 mt 3002 3326 L
3002  284 mt 3002  323 L
2919 3511 mt 
(0.6) s
3784 3366 mt 3784 3326 L
3784  284 mt 3784  323 L
3701 3511 mt 
(0.8) s
4566 3366 mt 4566 3326 L
4566  284 mt 4566  323 L
4533 3511 mt 
(1) s
 656 3366 mt  695 3366 L
4566 3366 mt 4526 3366 L
 555 3410 mt 
(0) s
 656 3057 mt  695 3057 L
4566 3057 mt 4526 3057 L
 455 3101 mt 
(0.1) s
 656 2749 mt  695 2749 L
4566 2749 mt 4526 2749 L
 455 2793 mt 
(0.2) s
 656 2441 mt  695 2441 L
4566 2441 mt 4526 2441 L
 455 2485 mt 
(0.3) s
 656 2133 mt  695 2133 L
4566 2133 mt 4526 2133 L
 455 2177 mt 
(0.4) s
 656 1825 mt  695 1825 L
4566 1825 mt 4526 1825 L
 455 1869 mt 
(0.5) s
 656 1516 mt  695 1516 L
4566 1516 mt 4526 1516 L
 455 1560 mt 
(0.6) s
 656 1208 mt  695 1208 L
4566 1208 mt 4526 1208 L
 455 1252 mt 
(0.7) s
 656  900 mt  695  900 L
4566  900 mt 4526  900 L
 455  944 mt 
(0.8) s
 656  592 mt  695  592 L
4566  592 mt 4526  592 L
 455  636 mt 
(0.9) s
 656  284 mt  695  284 L
4566  284 mt 4526  284 L
 555  328 mt 
(1) s
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
gs 656 284 3911 3083 rc
gr

/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
3104 2682 mt 3176 2682 L
3140 2646 mt 3140 2718 L
1713 1672 mt 1785 1672 L
1749 1636 mt 1749 1708 L
2292  990 mt 2364  990 L
2328  954 mt 2328 1026 L
3001  433 mt 3073  433 L
3037  397 mt 3037  469 L
1454 1028 mt 1526 1028 L
1490  992 mt 1490 1064 L
 802 3099 mt  874 3099 L
 838 3063 mt  838 3135 L
1656 2934 mt 1728 2934 L
1692 2898 mt 1692 2970 L
3925 1440 mt 3997 1440 L
3961 1404 mt 3961 1476 L
1794 3136 mt 1866 3136 L
1830 3100 mt 1830 3172 L
1065 2127 mt 1137 2127 L
1101 2091 mt 1101 2163 L
1855 1269 mt 1927 1269 L
1891 1233 mt 1891 1305 L
4466 2264 mt 4538 2264 L
4502 2228 mt 4502 2300 L
2729 1190 mt 2801 1190 L
2765 1154 mt 2765 1226 L
3254 2750 mt 3326 2750 L
3290 2714 mt 3290 2786 L
 911  630 mt  983  630 L
 947  594 mt  947  666 L
3629  351 mt 3701  351 L
3665  315 mt 3665  387 L
3833 3160 mt 3905 3160 L
3869 3124 mt 3869 3196 L
 903 1143 mt  975 1143 L
 939 1107 mt  939 1179 L
2876 1022 mt 2948 1022 L
2912  986 mt 2912 1058 L
2718 2169 mt 2790 2169 L
2754 2133 mt 2754 2205 L
3115 2657 mt 3165 2707 L
3165 2657 mt 3115 2707 L
1724 1647 mt 1774 1697 L
1774 1647 mt 1724 1697 L
2303  965 mt 2353 1015 L
2353  965 mt 2303 1015 L
3012  408 mt 3062  458 L
3062  408 mt 3012  458 L
1465 1003 mt 1515 1053 L
1515 1003 mt 1465 1053 L
 813 3074 mt  863 3124 L
 863 3074 mt  813 3124 L
1667 2909 mt 1717 2959 L
1717 2909 mt 1667 2959 L
3936 1415 mt 3986 1465 L
3986 1415 mt 3936 1465 L
1805 3111 mt 1855 3161 L
1855 3111 mt 1805 3161 L
1076 2102 mt 1126 2152 L
1126 2102 mt 1076 2152 L
1866 1244 mt 1916 1294 L
1916 1244 mt 1866 1294 L
4477 2239 mt 4527 2289 L
4527 2239 mt 4477 2289 L
2740 1165 mt 2790 1215 L
2790 1165 mt 2740 1215 L
3265 2725 mt 3315 2775 L
3315 2725 mt 3265 2775 L
 922  605 mt  972  655 L
 972  605 mt  922  655 L
3640  326 mt 3690  376 L
3690  326 mt 3640  376 L
3844 3135 mt 3894 3185 L
3894 3135 mt 3844 3185 L
 914 1118 mt  964 1168 L
 964 1118 mt  914 1168 L
2887  997 mt 2937 1047 L
2937  997 mt 2887 1047 L
2729 2144 mt 2779 2194 L
2779 2144 mt 2729 2194 L
gs 656 284 3911 3083 rc
/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
-1448 252 3140 2682 2 MP stroke
-1310 454 3140 2682 2 MP stroke
1362 -418 3140 2682 2 MP stroke
150 68 3140 2682 2 MP stroke
729 478 3140 2682 2 MP stroke
-386 -513 3140 2682 2 MP stroke
579 -682 1749 1672 2 MP stroke
-259 -644 1749 1672 2 MP stroke
-648 455 1749 1672 2 MP stroke
142 -403 1749 1672 2 MP stroke
1016 -482 1749 1672 2 MP stroke
-802 -1042 1749 1672 2 MP stroke
-810 -529 1749 1672 2 MP stroke
1163 -650 1749 1672 2 MP stroke
1005 497 1749 1672 2 MP stroke
709 -557 2328 990 2 MP stroke
-838 38 2328 990 2 MP stroke
-437 279 2328 990 2 MP stroke
437 200 2328 990 2 MP stroke
-1381 -360 2328 990 2 MP stroke
1337 -639 2328 990 2 MP stroke
-1389 153 2328 990 2 MP stroke
584 32 2328 990 2 MP stroke
426 1179 2328 990 2 MP stroke
-1146 836 3037 433 2 MP stroke
-272 757 3037 433 2 MP stroke
628 -82 3037 433 2 MP stroke
-125 589 3037 433 2 MP stroke
-389 1099 1490 1028 2 MP stroke
401 241 1490 1028 2 MP stroke
1275 162 1490 1028 2 MP stroke
-543 -398 1490 1028 2 MP stroke
-551 115 1490 1028 2 MP stroke
1422 -6 1490 1028 2 MP stroke
854 -165 838 3099 2 MP stroke
992 37 838 3099 2 MP stroke
263 -972 838 3099 2 MP stroke
138 202 1692 2934 2 MP stroke
-591 -807 1692 2934 2 MP stroke
1062 -765 1692 2934 2 MP stroke
541 824 3961 1440 2 MP stroke
-1196 -250 3961 1440 2 MP stroke
-296 -1089 3961 1440 2 MP stroke
-1049 -418 3961 1440 2 MP stroke
-1207 729 3961 1440 2 MP stroke
-729 -1009 1830 3136 2 MP stroke
1460 -386 1830 3136 2 MP stroke
924 -967 1830 3136 2 MP stroke
790 -858 1101 2127 2 MP stroke
-162 -984 1101 2127 2 MP stroke
874 -79 1891 1269 2 MP stroke
-944 -639 1891 1269 2 MP stroke
-952 -126 1891 1269 2 MP stroke
1021 -247 1891 1269 2 MP stroke
863 900 1891 1269 2 MP stroke
-1212 486 4502 2264 2 MP stroke
-633 896 4502 2264 2 MP stroke
900 -839 2765 1190 2 MP stroke
147 -168 2765 1190 2 MP stroke
-11 979 2765 1190 2 MP stroke
579 410 3290 2750 2 MP stroke
-536 -581 3290 2750 2 MP stroke
-8 513 947 630 2 MP stroke
-753 671 3665 351 2 MP stroke
-158 1147 2912 1022 2 MP stroke
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
